{"ast":null,"code":"var _jsxFileName = \"D:\\\\stellar-burgers\\\\src\\\\utils\\\\prop-types.js\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from 'react-dom';\nimport styles from './prop-types.module.css';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ingredientPropType = PropTypes.shape({\n  //укажите здесь prop-types для ингридиента\n});\nconst modalRoot = document.getElementById(\"react-modals\");\nconst modalOverlay = d;\nexport function Modal(props) {\n  const close = e => {\n    if (e.target) props.onClose();\n  };\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalOverlay,\n    onClick: close,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.closeButton,\n        onClick: close,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          type: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this), modalRoot);\n}\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["PropTypes","ReactDOM","styles","CloseIcon","jsxDEV","_jsxDEV","ingredientPropType","shape","modalRoot","document","getElementById","modalOverlay","d","Modal","props","close","e","target","onClose","createPortal","className","onClick","children","popup","closeButton","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/stellar-burgers/src/utils/prop-types.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './prop-types.module.css';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport const ingredientPropType = PropTypes.shape({\r\n  //укажите здесь prop-types для ингридиента\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\nconst modalOverlay = d\r\n\r\nexport function Modal (props) {\r\n\r\n  const close = (e) => {\r\n    if(e.target )\r\n    props.onClose()\r\n  }\r\n\r\n    return ReactDOM.createPortal((\r\n      <div className={styles.modalOverlay} onClick={close}>\r\n        <div className={styles.popup}>\r\n          <button className={styles.closeButton} onClick={close}><CloseIcon type=\"primary\" /></button>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    ), modalRoot);\r\n  }\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,OAAO,MAAMC,kBAAkB,GAAGN,SAAS,CAACO,KAAK,CAAC;EAChD;AAAA,CACD,CAAC;AASF,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;AACzD,MAAMC,YAAY,GAAGC,CAAC;AAEtB,OAAO,SAASC,KAAKA,CAAEC,KAAK,EAAE;EAE5B,MAAMC,KAAK,GAAIC,CAAC,IAAK;IACnB,IAAGA,CAAC,CAACC,MAAM,EACXH,KAAK,CAACI,OAAO,EAAE;EACjB,CAAC;EAEC,oBAAOjB,QAAQ,CAACkB,YAAY,eAC1Bd,OAAA;IAAKe,SAAS,EAAElB,MAAM,CAACS,YAAa;IAACU,OAAO,EAAEN,KAAM;IAAAO,QAAA,eAClDjB,OAAA;MAAKe,SAAS,EAAElB,MAAM,CAACqB,KAAM;MAAAD,QAAA,gBAC3BjB,OAAA;QAAQe,SAAS,EAAElB,MAAM,CAACsB,WAAY;QAACH,OAAO,EAAEN,KAAM;QAAAO,QAAA,eAACjB,OAAA,CAACF,SAAS;UAACsB,IAAI,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAC3Ff,KAAK,CAACQ,QAAQ;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF,EACLrB,SAAS,CAAC;AACf;AAACsB,EAAA,GAfajB,KAAK;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}